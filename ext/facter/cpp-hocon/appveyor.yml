environment:
  LEATHERMAN_VERSION: 0.9.0
install:
  - git submodule update --init --recursive

  - choco install -y mingw-w64 -Version 4.8.3 -source https://www.myget.org/F/puppetlabs
  - choco install -y cmake -Version 3.2.2 -source https://www.myget.org/F/puppetlabs
  - choco install -y gettext -Version 0.19.6 -source https://www.myget.org/F/puppetlabs
  - SET PATH=C:\Ruby21-x64\bin;C:\tools\mingw64\bin;C:\Program Files\gettext-iconv;%PATH%
  - ps: $env:PATH = $env:PATH.Replace("Git\bin", "Git\cmd")
  - ps: $env:PATH = $env:PATH.Replace("Git\usr\bin", "Git\cmd")

  - ps: wget 'https://s3.amazonaws.com/kylo-pl-bucket/boost_1_58_0-x86_64_mingw-w64_4.8.3_win32_seh.7z' -OutFile "$pwd\boost.7z"
  - ps: 7z.exe x boost.7z -oC:\tools | FIND /V "ing  "

  - ps: wget 'https://s3.amazonaws.com/kylo-pl-bucket/curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z' -OutFile "$pwd\curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z"
  - ps: 7z.exe x "curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z" -oC:\tools | FIND /V "ing "

  - ps: wget "https://github.com/puppetlabs/leatherman/releases/download/$env:LEATHERMAN_VERSION/leatherman.7z" -OutFile "$pwd\leatherman.7z"
  - ps: 7z.exe x leatherman.7z -oC:\tools | FIND /V "ing "

build_script:
  - ps: cmake -G "MinGW Makefiles" -DBOOST_ROOT="C:\tools\boost_1_58_0-x86_64_mingw-w64_4.8.3_win32_seh" -DCMAKE_PREFIX_PATH="C:\tools\leatherman;C:\tools\curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh" -DCURL_STATIC=ON -DBOOST_STATIC=ON -Wno-dev -DCMAKE_INSTALL_PREFIX=C:\tools\cpp-hocon .
  - ps: mingw32-make install
  - ps: 7z.exe a -t7z cpp-hocon.7z C:\tools\cpp-hocon\

test_script:
  - ps: ctest -V 2>&1 | %{ if ($_ -is [System.Management.Automation.ErrorRecord]) { $_ | c++filt } else { $_ } }

artifacts:
  - path: cpp-hocon.7z
    name: cpp-hocon.7z

deploy:
  description: Cpp-hocon build from AppVeyor
  provider: GitHub
  auth_token:
    secure: DMyUJSyyWU/cMaE3kZyoGuJNtt8VjHbw6g3n9HPzYk99aU8HlJay5meBgsTjVXfR
  artifact: cpp-hocon.7z
  on:
    appveyor_repo_tag: true
